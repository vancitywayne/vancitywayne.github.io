openapi: 3.0.0
info:
  title: webservice_js
  version: 1.0.0
servers:
  - url: https://books-server-eight.vercel.app
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: auth
  - name: categories
  - name: books
paths:
  /registration:
    post:
      tags:
        - auth
      summary: regis
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fullname: Uca Ganteng
                email: ucaganteng@gmail.com
                username: ucaganteng
                password: '1234'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login:
    post:
      tags:
        - auth
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: ucaganteng
                password: '1234'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /assign-role/2:
    put:
      tags:
        - auth
      summary: role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                admin: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /insert-categories:
    post:
      tags:
        - categories
      summary: insert
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Psychological Thriller
                description: >-
                  Thriller psikologis adalah genre yang menggabungkan genre
                  thriller dan fiksi psikologis
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /categories:
    get:
      tags:
        - categories
      summary: get all
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /get-categories/2:
    get:
      tags:
        - categories
      summary: get by id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /delete-categories/3:
    delete:
      tags:
        - categories
      summary: delete
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /update-categories/2:
    put:
      tags:
        - categories
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Sci-Fi
                description: >-
                  fiksi yang terutama membahas dampak sains aktual atau khayalan
                  terhadap masyarakat atau individu
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /insert-books:
    post:
      tags:
        - books
      summary: insert
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: test
                author: test
                year: 2002
                cover_image: test.jpg
                categories_id: 2
                summary: test
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /books:
    get:
      tags:
        - books
      summary: get
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /get-books/2:
    get:
      tags:
        - books
      summary: get by id
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /update-books/2:
    put:
      tags:
        - books
      summary: put
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: testing
                author: test
                year: 2006
                cover_image: test.jpg
                categories_id: 2
                summary: test
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /delete-books/2:
    delete:
      tags:
        - books
      summary: delete
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
